name: Full GCP Setup and Deploy to Cloud Run

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  # ðŸ”§ Fill these with your values
  PROJECT_ID: shashigcp-454502
  PROJECT_NUMBER: 393816461408
  GITHUB_USERNAME: shashivadhan
  REPO_NAME: cicd-gcp-deploy
  SERVICE_ACCOUNT: github-actions-sa

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Enable Required APIs
      - name: Enable Required APIs
        run: |
          gcloud services enable \
            run.googleapis.com \
            iam.googleapis.com \
            artifactregistry.googleapis.com \
            cloudbuild.googleapis.com || true

      # Create Artifact Registry
      - name: Create Artifact Registry Repo
        run: |
          gcloud artifacts repositories create hello-repo1 \
            --repository-format=docker \
            --location=us-central1 \
            --description="Artifact Registry for Cloud Run App" || true

      # Create Service Account
      - name: Create GitHub Actions Service Account
        run: |
          gcloud iam service-accounts create ${{ env.SERVICE_ACCOUNT }} \
            --display-name="GitHub Actions SA" || true

      # Bind Token Creator Role to Service Account
      - name: Bind Token Creator Role
        run: |
          gcloud iam service-accounts add-iam-policy-binding \
            ${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --member="serviceAccount:${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --role="roles/iam.serviceAccountTokenCreator" || true

      # Allow GitHub to impersonate the SA via Workload Identity
      - name: Allow Workload Identity to Impersonate SA
        run: |
          gcloud iam service-accounts add-iam-policy-binding \
            ${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --role="roles/iam.workloadIdentityUser" \
            --member="principalSet://iam.googleapis.com/projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool1/attribute.repository/${{ env.GITHUB_USERNAME }}/${{ env.REPO_NAME }}" || true

      # Grant required roles to SA
      - name: Grant Cloud Build Role
        run: |
          gcloud projects add-iam-policy-binding ${{ env.PROJECT_ID }} \
            --member="serviceAccount:${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --role="roles/cloudbuild.builds.editor" || true

      - name: Grant Cloud Run Role
        run: |
          gcloud projects add-iam-policy-binding ${{ env.PROJECT_ID }} \
            --member="serviceAccount:${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --role="roles/run.admin" || true

      - name: Grant Artifact Registry Role
        run: |
          gcloud projects add-iam-policy-binding ${{ env.PROJECT_ID }} \
            --member="serviceAccount:${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --role="roles/artifactregistry.writer" || true

      - name: Allow SA to Impersonate Compute Engine Default SA
        run: |
          gcloud iam service-accounts add-iam-policy-binding \
            ${{ env.PROJECT_NUMBER }}-compute@developer.gserviceaccount.com \
            --member="serviceAccount:${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --role="roles/iam.serviceAccountUser" || true

      # Authenticate GitHub Actions to GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool1/providers/github-provider1'
          service_account: '${{ env.SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: '${{ env.PROJECT_ID }}'

      # Build and Deploy to Cloud Run
      - name: Build and Deploy to Cloud Run
        run: |
          gcloud builds submit ./app \
            --tag us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/hello-repo1/hello-app
          gcloud run deploy hello-app \
            --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/hello-repo1/hello-app \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated
